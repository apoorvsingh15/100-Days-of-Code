A promise is an object which symbolises the eventual completion or failure of an async operation
and its resulting value

const promise = createOrder(cart);

promise.then(cart => console.log(cart.data.id)); // Something like this.

It has only three states:
- Pending
- Fulfilled
- Rejected

Promise.all()

The Promise.all() static method takes an iterable of promises as input and returns a single Promise.
This returned promise fulfills when all of the input's promises fulfill (including when an empty iterable is passed),
with an array of the fulfillment values. It rejects when any of the input's promises rejects, with this first rejection reason.

Promise.allSettled()

When all are settled

Promise.any()

The Promise.any() static method takes an iterable of promises as input and returns a single Promise.
This returned promise fulfills when any of the input's promises fulfills, with this first fulfillment value.
It rejects when all of the input's promises reject (including when an empty iterable is passed),
with an AggregateError containing an array of rejection reasons.


Promise.race()

When any settled